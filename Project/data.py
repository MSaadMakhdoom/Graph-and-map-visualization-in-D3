# -*- coding: utf-8 -*-
"""Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ce5nyDFwsK4fAUj1NNNuNIVdBq3jD2uz
"""

import pandas as pd
import numpy as np
import random

from google.colab import drive
drive.mount('/content/drive')

df1=pd.read_csv('/content/drive/MyDrive/Map/london_stations.csv')

df=pd.read_csv('/content/drive/MyDrive/Map/london.csv')

df.isnull().sum()

df = df[df['end_station_id'].notna()]

df = df[df['end_rental_date_time'].notna()]

df.isnull().sum()

out_bike=df[['start_station_id']].value_counts()

in_bike=df[['end_station_id']].value_counts()

out_bike

in_bike

df.columns

df['start_rental_date_time'] =pd.to_datetime(df['start_rental_date_time'])

df['date'] = [d.date() for d in df['start_rental_date_time']]

df=df.sample(10000)

a=in_bike.to_frame()

type(a)

b=out_bike.to_frame()

temp = pd.merge(left=a, right=df1, left_on='end_station_id', right_on='station_id')

temp.sample(2)

temp.rename(columns={0: "Count_In"}, inplace=True)

temp.columns

temp = pd.merge(left=b, right=temp, left_on='start_station_id', right_on='station_id')

temp.sample(2)

temp.rename(columns={0: "Count_Out"}, inplace=True)

temp.sample(2)

df = pd.merge(left=df, right=df1, left_on='end_station_id', right_on='station_id')

df.shape

df.columns

df.rename(columns={"longitude": "end_longitude", "latitude": "end_latitude"}, inplace=True)

df.drop(['station_id', 'station_name'], axis = 1, inplace = True)

df = pd.merge(left=df, right=df1, left_on='start_station_id', right_on='station_id')

df.rename(columns={"longitude": "start_longitude", "latitude": "start_latitude"}, inplace=True)

df.drop(['station_id', 'station_name'], axis = 1, inplace = True)

df.columns

df.shape

df.sample(2)

df['start_rental_date_time'] =pd.to_datetime(df['start_rental_date_time'])

type(df.start_rental_date_time)

df['date'] = [d.date() for d in df['start_rental_date_time']]

df.sample(2)

df.shape

min(df['date'])

max(df['date'])

temp.to_csv("london_station.csv",index=False)

df.to_csv("data.csv",index=False)

